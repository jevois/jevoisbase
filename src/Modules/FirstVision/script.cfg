# Demo configuration script for FirstVision module.

###################################################################################################################
# Essential parameters:
###################################################################################################################

# Detect a light green target initially (will adapt over time):
#
# hcue: 0=red/do not use because of wraparound, 30=yellow, 45=light green, 60=green, 75=green cyan, 90=cyan, 105=light
#        blue, 120=blue, 135=purple, 150=pink
# scue: 0 for unsaturated (whitish discolored object) to 255 for fully saturated (solid color)
# vcue: 0 for dark to 255 for maximally bright
setpar hcue 45
setpar scue 50
setpar vcue 200

# IMPORTANT: Set true width and height in meters of the U shaped-object we wish to detect:
# THIS IS REQUIRED FOR THE 6D POSE ESTIMATION TO WORK.
# In our lab, we had a U shape that is 28cm wide by 17.5cm high (outer convex hull dimensions)
setpar objsize 0.280 0.175

# Set camera to fixed color balance, gain, and exposure, so that we get more reliable colors than we would obtain under
# automatic mode:
setcam presetwb 0
setcam autowb 0
setcam autogain 0
setcam autoexp 0
setcam redbal 110
setcam bluebal 170
setcam gain 16
setcam absexp 500

# Send info log messages to None, Hard, or USB serial port - useful for debugging:
#setpar serlog None
#setpar serlog Hard
#setpar serlog USB

# Send serial strings with detected objects to None, Hard, or USB serial port:
#setpar serout None
#setpar serout Hard
#setpar serout USB

# Compute (and show) 6D object pose, requires a valid camera calibration. When dopose is true, 3D serial messages are
# sent out, otherwise 2D serial messages:
setpar dopose true

# Get detailed target info in our serial messages:
setpar serstyle Detail
setpar serprec 3

###################################################################################################################
# Parameters you can play with to optimize operation:
###################################################################################################################

# Some tuning of our Kalman filters (used for learning over time):
setpar procnoise 5.0
setpar measnoise 20.0
setpar postnoise 5.0
setpar usevel false

# Max number of blobs in the video frame. If more blobs are detected in a frame, we skip that frame before we even try
# to analyze shapes of the blobs:
setpar maxnumobj 100

# Range of object area (in pixels) to track
setpar hullarea 400 ... 90000

# Max fill ratio of the convex hull (percent). Lower values mean your shape occupies a smaller fraction of its convex
# hull. This parameter sets an upper bound, fuller shapes will be rejected:
setpar hullfill 50

# Erosion structuring element size (pixels), or 0 for no erosion:
setpar erodesize 2

# Dilation structuring element size (pixels), or 0 for no dilation:
setpar dilatesize 4

# Shape smoothing factor (higher for smoother). Shape smoothing is applied to remove small contour defects before the
# shape is analyzed:
setpar epsilon 0.015

# Show contours of all object candidates if true:
setpar debug false

# Number of parallel vision processing threads. Thread 0 uses the HSV values provided by user parameters; thread 1
# broadens that fixed range a bit; threads 2-3 use a narrow and broader learned HSV window over time:
setpar threads 4

# Thread number that is used to display HSV-thresholded image:
setpar showthread 0

# Shape error threshold (lower is stricter for exact shape):
setpar ethresh 900

# Intersection-over-union ratio over which duplicates are eliminated:
setpar iou 0.3

# Margin from from frame borders (pixels). If any corner of a detected shape gets closer than the margin to the frame
# borders, the shape will be rejected. This is to avoid possibly bogus 6D pose estimation when the shape starts getting
# truncated as it partially exits the camera's field of view:
setpar margin 5
